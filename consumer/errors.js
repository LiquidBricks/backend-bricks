// Centralized diagnostic codes for consumer package
// Use SCREAMING_SNAKE_CASE and group by domain

export const Errors = {
  // Generic preconditions
  PRECONDITION_REQUIRED: 'PRECONDITION_REQUIRED',
  PRECONDITION_INVALID: 'PRECONDITION_INVALID',

  // Subject factory
  SUBJECT_REQUIRED_PART_MISSING: 'SUBJECT_REQUIRED_PART_MISSING',

  // Router
  ROUTER_MESSAGE_RECEIVED: 'ROUTER_MESSAGE_RECEIVED',
  ROUTER_WORKING_SIGNAL: 'ROUTER_WORKING_SIGNAL',
  ROUTER_HANDLER_ERROR: 'ROUTER_HANDLER_ERROR',
  ROUTER_UNKNOWN_SUBJECT: 'ROUTER_UNKNOWN_SUBJECT',

  // Component service - component events/commands
  COMPONENT_EVENT_REGISTERED: 'COMPONENT_EVENT_REGISTERED',
  COMPONENT_COMMAND_REGISTER: 'COMPONENT_COMMAND_REGISTER',

  // ComponentInstance service
  COMPONENT_INSTANCE_EVENT_CREATED: 'COMPONENT_INSTANCE_EVENT_CREATED',
  COMPONENT_INSTANCE_EVENT_DATA_PROVIDED: 'COMPONENT_INSTANCE_EVENT_DATA_PROVIDED',
  COMPONENT_INSTANCE_EVENT_UNKNOWN: 'COMPONENT_INSTANCE_EVENT_UNKNOWN',

  COMPONENT_INSTANCE_CREATE_REQUESTED: 'COMPONENT_INSTANCE_CREATE_REQUESTED',
  COMPONENT_INSTANCE_CREATED: 'COMPONENT_INSTANCE_CREATED',
  COMPONENT_INSTANCE_START_REQUESTED: 'COMPONENT_INSTANCE_START_REQUESTED',
  COMPONENT_INSTANCE_PROVIDE_DATA_REQUESTED: 'COMPONENT_INSTANCE_PROVIDE_DATA_REQUESTED',
  COMPONENT_INSTANCE_DATA_PROVIDED: 'COMPONENT_INSTANCE_DATA_PROVIDED',

  COMPONENT_INSTANCE_COMMAND_UNKNOWN: 'COMPONENT_INSTANCE_COMMAND_UNKNOWN',
  COMPONENT_INSTANCE_COMMAND_FAILED: 'COMPONENT_INSTANCE_COMMAND_FAILED',
  COMPONENT_INSTANCE_PUBLISH_FAILED: 'COMPONENT_INSTANCE_PUBLISH_FAILED',
  COMPONENT_INSTANCE_DATA_PROVIDED_PUBLISH_FAILED: 'COMPONENT_INSTANCE_DATA_PROVIDED_PUBLISH_FAILED',
};
